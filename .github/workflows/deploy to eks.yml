name: Deploy to AWS EKS

on:
  push:
    branches: 
      - main
env:
  ECR_REPOSITORY: sca_project
  CLUSTER_NAME: SCA-Project
  REGION: us-east-1
  ECR_REGISTRY: public.ecr.aws/g8t1g9i0
  IMAGE_TAG: latest
  REGISTRY_HTTP_RELATIVEURLS: true


jobs:

  deploy:
    name: Build image
    runs-on: ubuntu-latest

    steps:
    - name: Check out code
      uses: actions/checkout@v2

    - name: Install kubectl
      uses: azure/setup-kubectl@v1
      with:
        version: 'v1.21.3'
      id: install

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1

    - name: Login to Amazon ECR Public
      id: login-ecr-public
      uses: aws-actions/amazon-ecr-login@v1
      with:
        registry-type: 'public'
        
    - name: Build, tag, and push image to Amazon ECR
      env:
        ECR_REGISTRY: ${{ steps.login-ecr-public.outputs.registry }} 
      run: |
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
    # Set up kustomize
    - name: Set up Kustomize
      run: |-
        curl -sfLo kustomize https://github.com/kubernetes-sigs/kustomize/releases/download/v3.1.0/kustomize_3.1.0_linux_amd64
        chmod u+x ./kustomize

    - name: Update kube config
      run: aws eks update-kubeconfig --name $CLUSTER_NAME --region $REGION  

    - name: Deploy
      run: |-
        # replacing the image name in the k8s template
        ./kustomize edit set image image-name=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        ./kustomize build . | kubectl apply -f -
        kubectl rollout status deployment/$DEPLOYMENT_NAME
        kubectl get services 
